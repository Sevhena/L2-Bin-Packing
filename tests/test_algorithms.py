import macpacking.algorithms.online as online
import macpacking.algorithms.offline as offline
from macpacking.reader import DatasetReader, BinppReader,JburkardtReader
from macpacking.model  import Online,Offline

dataset = '_datasets/binpp/N1C1W1/N1C1W1_B.BPP.txt'
dataset_hard = '_datasets/binpp-hard/HARD0.BPP.txt'

dataset_c = '_datasets/jburkardt/p01_c.txt'
dataset_w = '_datasets/jburkardt/p01_w.txt'

# Online


def test_nextFit_binpp():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Online = online.NextFit()
    result = strategy(reader.online())

    assert len(result) == 36
    assert result == [[61], [62], [69], [83], [97], [13, 61], [88], [44], [72], [43], [66], [79], [97], [20, 23], [83], [62, 37], [100], [15, 70], [40, 8, 18], [44, 50], [67], [63, 17, 13], [37, 43, 14], [76, 8, 12], [97], [51, 30], [93], [39], [93], [92], [76], [75], [71], [99], [92], [19]]


def test_nextFit_binppHard():
    
    reader: DatasetReader = BinppReader(dataset_hard)

    strategy: Online = online.NextFit()
    result = strategy(reader.online())

    assert len(result) == 64
    assert result == [[29174, 20677, 27180, 20570], [26368, 25759, 33738], [34703, 29427, 30915], [24564, 21796, 25366], [28977, 22991, 22014], [30869, 25273, 32230], [34608, 22942, 33590], [31346, 25530, 20686, 22432], [30683, 26375, 34524], [20566, 31686, 25698], [33806, 31724, 23453], [29117, 29783, 20496], [31967, 21727, 21784], [29856, 33895, 23952], [22743, 30315, 25615], [26703, 29063, 26204], [26795, 27439, 26881], [23932, 30943, 34978], [22442, 20616, 33546], [28842, 26935, 31597], [23178, 21480, 24592, 28921], [26181, 33465, 33716], [21315, 23895, 21127, 29301], [28305, 22134, 30766], [26867, 28910, 30125], [20441, 28302, 26067], [26432, 24846, 23987], [31954, 33468, 24359], [25688, 21498, 29438], [28350, 23795, 27284], [23366, 29094, 32638], [20693, 26244, 30448, 21557], [34598, 32398, 20813], [27349, 27365, 25142], [25652, 20226, 24658, 21193], [25906, 31903, 30678], [21948, 24457, 23774, 24852], [25528, 33190, 28703], [28946, 34049, 28360], [22338, 25945, 28040], [29123, 30238, 28020], [27688, 31499, 27765], [26158, 20114, 23090], [32762, 21060, 23837], [29041, 29886, 23502], [33507, 30644, 27775], [29038, 24332, 33383], [27425, 32176, 24463], [26133, 33842, 29173], [28094, 27901, 32897], [27394, 20837, 20663, 28225], [20997, 31561, 21950], [28160, 20693, 31532], [34849, 29095, 23663], [26192, 29947, 26651], [20634, 22081, 30559, 23956], [20307, 23430, 25324, 29858], [29974, 32976, 34308], [34069, 26550, 23621], [33075, 24374, 21722], [32696, 20676, 31782], [29890, 29697, 29116], [20664, 34356, 32553], [22415]]


def test_nextFit_jburk():
    
    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Online = online.NextFit()
    result = strategy(reader.online())

    assert len(result) == 9
    assert result == [[33, 33], [50, 33], [50, 33, 7], [33, 33, 11], [60, 33], [60, 33, 3], [33], [70], [50]]
    
#-------------------------------------------

def test_firstFit_binpp():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Online = online.FirstFit()
    result = strategy(reader.online())

    assert len(result) == 31
    assert result == [[62, 13, 20], [61, 23, 15], [69, 8, 18], [83, 17], [97], [61, 37], [88, 8], [44, 43, 13], [72, 14, 12], [66, 30], [79, 19], [97], [83], [62, 37], [100], [70], [40, 50], [44, 43], [67], [63], [76], [97], [51, 39], [93], [93], [92], [76], [75], [71], [99], [92]]


def test_firsFit_binppHard():
    
    reader: DatasetReader = BinppReader(dataset_hard)

    strategy: Online = online.FirstFit()
    result = strategy(reader.online())

    assert len(result) == 62
    assert result == [[20677, 27180, 20570, 26368], [29174, 33738, 34703], [25759, 30915, 24564], [29427, 25366, 28977], [21796, 22014, 30869, 25273], [22991, 34608, 22942], [32230, 31346, 25530], [33590, 22432, 30683], [20686, 34524, 20566, 23453], [26375, 25698, 33806], [31686, 29117, 29783], [31724, 31967, 21727], [20496, 29856, 33895], [21784, 22743, 30315, 23932], [23952, 26703, 29063, 20226], [25615, 26795, 27439, 20114], [26204, 30943, 34978], [26881, 20616, 33546], [22442, 26935, 31597], [28842, 21480, 24592, 21315], [23178, 26181, 33465], [28921, 23895, 21127, 22134], [33716, 28305, 30766], [29301, 28910, 30125], [26867, 28302, 26067], [20441, 24846, 23987, 24359], [26432, 33468, 25688], [31954, 29438, 28350], [21498, 27284, 23366, 20693], [23795, 32638, 26244], [29094, 21557, 34598], [30448, 20813, 27349, 21193], [32398, 25142, 25652], [27365, 25906, 31903], [24658, 21948, 24457, 23774], [30678, 25528, 33190], [24852, 28946, 34049], [28703, 22338, 25945, 21060], [28360, 29123, 30238], [28040, 27688, 31499], [28020, 26158, 23090, 20837], [27765, 23837, 29041], [32762, 23502, 33507], [29886, 27775, 29038], [30644, 33383, 27425], [24332, 24463, 26133, 20663], [32176, 29173, 28094], [33842, 32897, 27394], [27901, 20997, 31561], [28225, 28160, 20693, 20634], [21950, 34849, 29095], [31532, 26192, 29947], [23663, 22081, 30559, 20307], [26651, 23430, 25324, 23621], [23956, 29974, 32976], [29858, 34069, 26550], [34308, 24374, 21722], [33075, 20676, 31782], [32696, 29697, 29116], [29890, 34356, 32553], [20664], [22415]]


def test_firstFit_jburk():
    
    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Online = online.FirstFit()
    result = strategy(reader.online())

    assert len(result) == 8
    assert result == [[33, 50, 7, 3], [33, 50, 11], [33, 33, 33], [33, 33, 33], [60, 33], [60], [70], [50]]
    
#-------------------------------------------

def test_badFit_binpp():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Online = online.BadFit()
    result = strategy(reader.online())

    assert len(result) == 50
    assert result == [[61], [62], [69], [83], [97], [13], [61], [88], [44], [72], [43], [66], [79], [97], [20], [23], [83], [62], [37], [100], [15], [70], [40], [8], [18], [44], [50], [67], [63], [17], [13], [37], [43], [14], [76], [8], [12], [97], [51], [30], [93], [39], [93], [92], [76], [75], [71], [99], [92], [19]]


def test_badFit_binppHard():
    
    reader: DatasetReader = BinppReader(dataset_hard)
    
    strategy: Online = online.BadFit()
    result = strategy(reader.online())

    assert len(result) == 200
    assert result == [[29174], [20677], [27180], [20570], [26368], [25759], [33738], [34703], [29427], [30915], [24564], [21796], [25366], [28977], [22991], [22014], [30869], [25273], [32230], [34608], [22942], [33590], [31346], [25530], [20686], [22432], [30683], [26375], [34524], [20566], [31686], [25698], [33806], [31724], [23453], [29117], [29783], [20496], [31967], [21727], [21784], [29856], [33895], [23952], [22743], [30315], [25615], [26703], [29063], [26204], [26795], [27439], [26881], [23932], [30943], [34978], [22442], [20616], [33546], [28842], [26935], [31597], [23178], [21480], [24592], [28921], [26181], [33465], [33716], [21315], [23895], [21127], [29301], [28305], [22134], [30766], [26867], [28910], [30125], [20441], [28302], [26067], [26432], [24846], [23987], [31954], [33468], [24359], [25688], [21498], [29438], [28350], [23795], [27284], [23366], [29094], [32638], [20693], [26244], [30448], [21557], [34598], [32398], [20813], [27349], [27365], [25142], [25652], [20226], [24658], [21193], [25906], [31903], [30678], [21948], [24457], [23774], [24852], [25528], [33190], [28703], [28946], [34049], [28360], [22338], [25945], [28040], [29123], [30238], [28020], [27688], [31499], [27765], [26158], [20114], [23090], [32762], [21060], [23837], [29041], [29886], [23502], [33507], [30644], [27775], [29038], [24332], [33383], [27425], [32176], [24463], [26133], [33842], [29173], [28094], [27901], [32897], [27394], [20837], [20663], [28225], [20997], [31561], [21950], [28160], [20693], [31532], [34849], [29095], [23663], [26192], [29947], [26651], [20634], [22081], [30559], [23956], [20307], [23430], [25324], [29858], [29974], [32976], [34308], [34069], [26550], [23621], [33075], [24374], [21722], [32696], [20676], [31782], [29890], [29697], [29116], [20664], [34356], [32553], [22415]]


def test_badFit_jburk():

    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Online = online.BadFit()
    result = strategy(reader.online())

    assert len(result) == 18
    assert result == [[33], [33], [50], [33], [50], [33], [7], [33], [33], [11], [60], [33], [60], [33], [3], [33], [70], [50]]

#-------------------------------------------

def test_WorstFit_binpp():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Online = online.WorstFit()
    result = strategy(reader.online())

    assert len(result) == 33
    assert result == [[61, 13], [62, 23], [69], [83], [97], [61, 20], [88], [44, 43], [72], [66, 18], [79], [97], [83], [62, 8], [37, 15, 40], [100], [70], [44, 17, 37], [50, 13, 14], [67], [63, 30], [43, 8, 12, 19], [76], [97], [51, 39], [93], [93], [92], [76], [75], [71], [99], [92]]


def test_worstFit_binppHard():
    
    reader: DatasetReader = BinppReader(dataset_hard)
    
    strategy: Online = online.WorstFit()
    result = strategy(reader.online())

    assert len(result) == 63
    assert result == [[29174, 20677, 27180, 20570], [26368, 33738, 34703], [25759, 30915, 24564], [29427, 25366, 28977], [21796, 22014, 30869, 25273], [22991, 34608, 22942], [32230, 31346, 25530], [33590, 22432, 30683], [20686, 34524, 20566, 21727], [26375, 25698, 33806], [31686, 23453, 29117], [31724, 20496, 31967], [29783, 29856, 33895], [21784, 22743, 30315, 23987], [23952, 26703, 29063], [25615, 26795, 27439], [26204, 23932, 30943], [26881, 22442, 20616, 24592], [34978, 28842, 26935], [33546, 23178, 21480, 20114], [31597, 26181, 33465], [28921, 21315, 23895, 21127], [33716, 28305, 22134], [29301, 26867, 28910], [30766, 20441, 28302], [30125, 26432, 24846], [26067, 33468, 24359], [31954, 21498, 29438], [25688, 23795, 27284, 20693], [28350, 29094, 32638], [23366, 30448, 21557, 21948], [26244, 32398, 20813], [34598, 27365, 25142], [27349, 20226, 24658, 21193], [25652, 31903, 30678], [25906, 23774, 24852, 22338], [24457, 33190, 28703], [25528, 34049, 28360], [28946, 28040, 29123], [25945, 28020, 27688], [30238, 27765, 26158], [31499, 32762, 21060], [23090, 29041, 29886], [23837, 33507, 30644], [23502, 29038, 24332, 20663], [27775, 27425, 32176], [33383, 26133, 33842], [24463, 28094, 27901], [29173, 27394, 20837, 21950], [32897, 20997, 31561], [28225, 20693, 31532], [28160, 29095, 23663], [34849, 29947, 26651], [26192, 22081, 30559], [20634, 20307, 23430, 25324], [23956, 29974, 32976], [29858, 34069, 26550], [34308, 33075, 24374], [23621, 32696, 20676], [21722, 29890, 29697], [31782, 20664, 34356], [29116, 22415], [32553]]


def test_worstFit_jburk():

    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Online = online.WorstFit()
    result = strategy(reader.online())

    assert len(result) == 8
    assert result == [[33, 33, 33], [50, 33, 7], [50, 33, 11], [33, 33, 3], [60, 33], [60], [33, 50], [70]]
  
#-------------------------------------------

def test_refinedFirstFit_binpp():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Online = online.RefinedFirstFit()
    result = strategy(reader.online())

    assert len(result) == 36
    assert result == [[62, 37], [61, 39], [69], [83], [97], [61], [88], [72], [66], [79], [97], [83], [62], [100], [70], [67], [63], [76], [97], [51], [93], [93], [92], [76], [75], [71], [99], [92], [43, 44], [44, 43], [50], [40], [37], [20, 23, 15, 8, 18, 13], [13, 14, 8, 12, 30, 19], [17]]


def test_refinedFirsFit_binppHard():
    
    reader: DatasetReader = BinppReader(dataset_hard)

    strategy: Online = online.RefinedFirstFit()
    result = strategy(reader.online())

    assert len(result) == 66
    assert result == [
        [34703, 34978], [33738, 33842], [34598, 34308], [34849], [34356], [33590, 34524], 
        [34608, 33895], [33806, 33465], [33546, 33468], [33716, 33507], [34049, 34069], 
        [33383], [20677, 27180, 20570, 26368], [29174, 29427, 30915], 
        [25759, 21796, 25366, 22991], [24564, 22014, 30869, 20686], [28977, 32230, 22942], 
        [25273, 25530, 22432, 26375], [31346, 20566, 31686], [30683, 31724, 23453], 
        [25698, 29783, 20496, 21727], [29117, 21784, 29856], [31967, 22743, 30315], 
        [23952, 26703, 29063, 20226], [25615, 26795, 27439, 20114], [26204, 23932, 30943], 
        [26881, 20616, 28842, 23178], [22442, 31597, 21480, 21315], [26935, 28921, 26181], 
        [24592, 21127, 29301, 22134], [23895, 30766, 26867], [28305, 30125, 20441, 20693], 
        [28910, 26067, 26432], [28302, 23987, 31954], [24846, 25688, 21498, 23795], 
        [24359, 28350, 27284], [29438, 29094, 32638], [23366, 30448, 21557, 20813], 
        [26244, 27349, 27365], [32398, 25652, 24658], [25142, 25906, 31903], 
        [21193, 21948, 24457, 23774], [30678, 25528, 33190], [24852, 28946, 28360], 
        [28703, 25945, 28040], [22338, 30238, 28020], [29123, 31499, 27765], [27688, 23090, 32762], 
        [26158, 23837, 29041, 20837], [21060, 23502, 30644, 24332], [29886, 29038, 27425], 
        [27775, 24463, 26133, 20663], [32176, 28094, 27901], [29173, 27394, 28225], 
        [32897, 31561, 21950], [20997, 20693, 31532, 23663], [28160, 26192, 29947], 
        [29095, 20634, 22081, 23956], [26651, 20307, 23430, 25324], [30559, 29974, 32976], 
        [29858, 23621, 33075], [26550, 21722, 32696], [24374, 31782, 29890], 
        [20676, 29116, 20664, 22415], [29697], [32553]
    ]


def test_refinedFirstFit_jburk():

    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Online = online.RefinedFirstFit()
    result = strategy(reader.online())

    assert len(result) == 10
    assert result == [[60], [60], [70], [50, 50], [50], [33, 33, 33], [33, 33, 33], [7, 33, 33, 3], [11], [33]]
 
#-------------------------------------------

def test_bestFit_binpp():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Online = online.BestFit()
    result = strategy(reader.online())

    assert len(result) == 31
    assert result == [[61, 39], [62, 37], [69, 17, 14], [83, 13], [97], [61], [88, 8], [44, 43, 13], [72, 23], [66], [79, 20], [97], [83, 15], [62, 37], [100], [70, 18, 12], [40, 50, 8], [44, 43], [67, 30], [63], [76, 19], [97], [51], [93], [93], [92], [76], [75], [71], [99], [92]]


def test_bestFit_binppHard():
    
    reader: DatasetReader = BinppReader(dataset_hard)

    strategy: Online = online.BestFit()
    result = strategy(reader.online())

    assert len(result) == 62
    assert result == [[29174, 20677, 27180, 20570], [26368, 33738, 34703], [25759, 30915, 24564], [29427, 25366, 28977], [21796, 22014, 30869, 25273], [22991, 34608, 22942], [32230, 31346, 25530], [33590, 22432, 30683], [20686, 34524, 20566, 23453], [26375, 25698, 33806], [31686, 29117, 29783], [31724, 31967, 21727], [20496, 29856, 33895], [21784, 22743, 30315, 23932], [23952, 26703, 29063, 20226], [25615, 26795, 27439, 20114], [26204, 30943, 34978], [26881, 20616, 33546], [22442, 26935, 31597], [28842, 21480, 24592, 21315], [23178, 26181, 33465], [28921, 23895, 21127, 22134], [33716, 28305, 30766], [29301, 28910, 30125], [26867, 28302, 26067], [20441, 24846, 23987, 24359], [26432, 33468, 25688], [31954, 29438, 28350], [21498, 27284, 23366, 20693], [23795, 32638, 26244], [29094, 21557, 34598], [30448, 20813, 27349, 21193], [32398, 25142, 25652], [27365, 25906, 31903], [24658, 21948, 24457, 23774], [30678, 25528, 33190], [24852, 28946, 34049], [28703, 22338, 25945, 20837], [28360, 29123, 30238], [28040, 27688, 31499], [28020, 26158, 23090, 21060], [27765, 23837, 29041], [32762, 23502, 33507], [29886, 27775, 29038], [30644, 33383, 27425], [24332, 24463, 26133, 20663], [32176, 29173, 28094], [33842, 32897, 27394], [27901, 20997, 31561], [28225, 28160, 20693, 20634], [21950, 34849, 29095], [31532, 26192, 29947], [23663, 22081, 30559, 20307], [26651, 23430, 25324, 23621], [23956, 29974, 32976], [29858, 34069, 26550], [34308, 24374, 21722], [33075, 20676, 31782], [32696, 29697, 29116], [29890, 34356, 32553], [20664], [22415]]


def test_bestFit_jburk():

    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Online = online.BestFit()
    result = strategy(reader.online())

    assert len(result) == 8
    assert result == [[33, 33, 33], [50, 33, 7], [50, 33, 11, 3], [33, 33, 33], [60, 33], [60], [70], [50]]

# Offline

def test_nextFit_binppOFF():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Offline = offline.NextFit()
    result = strategy(reader.offline())

    assert len(result) == 36
    assert result == [[61], [62], [69], [83], [97], [13, 61], [88], [44], [72], [43], [66], [79], [97], [20, 23], [83], [62, 37], [100], [15, 70], [40, 8, 18], [44, 50], [67], [63, 17, 13], [37, 43, 14], [76, 8, 12], [97], [51, 30], [93], [39], [93], [92], [76], [75], [71], [99], [92], [19]]


def test_nextFit_binppHardOFF():
    
    reader: DatasetReader = BinppReader(dataset_hard)

    strategy: Offline = offline.NextFit()
    result = strategy(reader.offline())

    assert len(result) == 64
    assert result == [[29174, 20677, 27180, 20570], [26368, 25759, 33738], [34703, 29427, 30915], [24564, 21796, 25366], [28977, 22991, 22014], [30869, 25273, 32230], [34608, 22942, 33590], [31346, 25530, 20686, 22432], [30683, 26375, 34524], [20566, 31686, 25698], [33806, 31724, 23453], [29117, 29783, 20496], [31967, 21727, 21784], [29856, 33895, 23952], [22743, 30315, 25615], [26703, 29063, 26204], [26795, 27439, 26881], [23932, 30943, 34978], [22442, 20616, 33546], [28842, 26935, 31597], [23178, 21480, 24592, 28921], [26181, 33465, 33716], [21315, 23895, 21127, 29301], [28305, 22134, 30766], [26867, 28910, 30125], [20441, 28302, 26067], [26432, 24846, 23987], [31954, 33468, 24359], [25688, 21498, 29438], [28350, 23795, 27284], [23366, 29094, 32638], [20693, 26244, 30448, 21557], [34598, 32398, 20813], [27349, 27365, 25142], [25652, 20226, 24658, 21193], [25906, 31903, 30678], [21948, 24457, 23774, 24852], [25528, 33190, 28703], [28946, 34049, 28360], [22338, 25945, 28040], [29123, 30238, 28020], [27688, 31499, 27765], [26158, 20114, 23090], [32762, 21060, 23837], [29041, 29886, 23502], [33507, 30644, 27775], [29038, 24332, 33383], [27425, 32176, 24463], [26133, 33842, 29173], [28094, 27901, 32897], [27394, 20837, 20663, 28225], [20997, 31561, 21950], [28160, 20693, 31532], [34849, 29095, 23663], [26192, 29947, 26651], [20634, 22081, 30559, 23956], [20307, 23430, 25324, 29858], [29974, 32976, 34308], [34069, 26550, 23621], [33075, 24374, 21722], [32696, 20676, 31782], [29890, 29697, 29116], [20664, 34356, 32553], [22415]]


def test_nextFit_jburkOFF():

    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Offline = offline.NextFit()
    result = strategy(reader.offline())

    assert len(result) == 9
    assert result == [[33, 33], [50, 33], [50, 33, 7], [33, 33, 11], [60, 33], [60, 33, 3], [33], [70], [50]]
    
#-------------------------------------------

def test_firstFitDecreaseing_binppOFF():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Offline = offline.FirstFitDecreasing()
    result = strategy(reader.offline())

    assert len(result) == 31
    assert result == [[99], [100], [97], [97], [97], [93], [93], [92, 8], [92, 8], [88, 12], [83, 17], [83, 15], [79, 20], [76, 23], [76, 19], [75, 18], [72, 14, 13], [71, 13], [70, 30], [69], [67], [66], [63, 37], [62, 37], [62], [61, 39], [61], [51, 44], [50, 43], [44, 40], [43]]


def test_firsFitDecreasing_binppHardOFF():
    reader: DatasetReader = BinppReader(dataset_hard)

    strategy: Offline = offline.FirstFitDecreasing()
    result = strategy(reader.offline())

    assert len(result) == 60
    assert result == [[34849, 34703, 30448], [34978, 34598, 30315], [34608, 34356, 30943], [34524, 34069, 31346], [34308, 33895, 31782], [34049, 33806, 31967], [33842, 33716, 32398], [33738, 33546, 32696], [33590, 33468, 32897], [33507, 33383, 33075], [33465, 32976, 32762], [33190, 32553, 32230], [32638, 31954, 31903], [32176, 31686, 31597], [31724, 31532, 31499], [31561, 30869, 30766], [30915, 30678, 30644], [30683, 30238, 30125], [30559, 29947, 29890], [29974, 29858, 29856], [29886, 29697, 29438], [29783, 29301, 29174], [29427, 29123, 29117], [29173, 29095, 29094], [29116, 29041, 29038], [29063, 28946, 28921], [28977, 28842, 28703], [28910, 28350, 28305], [28360, 28225, 28160], [28302, 28040, 28020], [28094, 27775, 27765], [27901, 27439, 27425], [27688, 27365, 27349], [27394, 27180, 26935], [27284, 26867, 26795], [26881, 26651, 26550], [26703, 26375, 26368, 20496], [26432, 26204, 26192, 21127], [26244, 26158, 26133, 21315], [26181, 25945, 25906, 21950], [26067, 25698, 25688, 22442], [25759, 25615, 25530, 23090], [25652, 25366, 25324, 23621], [25528, 25142, 24852, 24463], [25273, 24658, 24592, 24564], [24846, 24374, 24359, 24332], [24457, 23956, 23952, 23932], [23987, 23837, 23795, 23774], [23895, 23502, 23453, 23430], [23663, 23178, 22991, 22942], [23366, 22432, 22415, 22338], [22743, 22081, 22014, 21948], [22134, 21784, 21727, 21722], [21796, 21498, 21480, 21193], [21557, 20997, 20837, 20813], [21060, 20693, 20686, 20677], [20693, 20664, 20663, 20634], [20676, 20570, 20566, 20441], [20616, 20226, 20114], [20307]]


def test_firstFitDecreasing_jburkOFF():

    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Offline = offline.FirstFitDecreasing()
    result = strategy(reader.offline())

    assert len(result) == 8
    assert result == [[60, 33, 7], [70, 11, 3], [60, 33], [50, 50], [50, 33], [33, 33, 33], [33, 33], [33]]
    
#-------------------------------------------

def test_WorstFitDecreasing_binppOFF():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Offline = offline.WorstFitDecreasing()
    result = strategy(reader.offline())

    assert len(result) == 33
    assert result == [[100], [99], [97], [97], [97], [93], [93], [92], [92], [88], [83, 8], [83], [79, 8], [76, 13], [76, 12], [75, 13], [72, 14], [71, 15], [70, 17], [69, 18], [67, 19], [66, 20], [63, 23], [62, 37], [62, 30], [61, 39], [61, 37], [51, 44], [50, 43], [44, 40], [43]]


def test_worstFitDecreasing_binppHardOFF():
    reader: DatasetReader = BinppReader(dataset_hard)
    
    strategy: Offline = offline.WorstFitDecreasing()
    result = strategy(reader.offline())

    assert len(result) == 60
    assert result == [[34978, 34849, 30125], [34703, 34598, 30683], [34608, 34356, 30943], [34524, 34069, 31346], [34308, 33895, 31782], [34049, 33806, 31903], [33842, 33716, 32230], [33738, 33546, 32696], [33590, 33468, 32762], [33507, 33383, 32897], [33465, 33075, 32976], [33190, 32553, 32398], [32638, 31967, 31954], [32176, 31686, 31597], [31724, 31532, 31499], [31561, 30869, 30766], [30915, 30644, 30559], [30678, 30315, 30238], [30448, 29947, 29890], [29974, 29858, 29856], [29886, 29697, 29438], [29783, 29301, 29174], [29427, 29123, 29117], [29173, 29095, 29094], [29116, 29041, 29038], [29063, 28946, 28921], [28977, 28842, 28703], [28910, 28350, 28305], [28360, 28225, 28160], [28302, 28040, 28020], [28094, 27775, 27765], [27901, 27439, 27425], [27688, 27365, 27349], [27394, 27180, 26935], [27284, 26867, 26795], [26881, 26651, 26550], [26703, 26375, 26368, 20441], [26432, 26204, 26192, 21127], [26244, 26158, 26133, 21193], [26181, 25945, 25906, 21948], [26067, 25698, 25688, 22338], [25759, 25615, 25530, 22942], [25652, 25366, 25324, 23430], [25528, 25142, 24852, 24463], [25273, 24658, 24592, 24564], [24846, 24374, 24359, 24332], [24457, 23956, 23952, 23932], [23987, 23837, 23795, 23774], [23895, 23621, 23502, 23453], [23663, 23178, 23090, 22991], [23366, 22442, 22432, 22415], [22743, 22081, 22014, 21950], [22134, 21784, 21727, 21722], [21796, 21498, 21480, 21315], [21557, 20997, 20837, 20813], [21060, 20693, 20686, 20677], [20693, 20664, 20663, 20634], [20676, 20570, 20566, 20496], [20616, 20226, 20114], [20307]]


def test_worstFitDecreasing_jburkOFF():

    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Offline = offline.WorstFitDecreasing()
    result = strategy(reader.offline())

    assert len(result) == 8
    assert result == [[70, 7, 3], [60, 33], [60, 33], [50, 50], [50, 33], [33, 33, 33], [33, 33, 11], [33]]
  
#-------------------------------------------

def test_bestFitDecreasing_binppOFF():
    
    reader: DatasetReader = BinppReader(dataset)

    strategy: Offline = offline.BestFitDecreasing()
    result = strategy(reader.offline())

    assert len(result) == 31
    assert result == [[100], [99], [97], [97], [97], [93], [93], [92, 8], [92, 8], [88, 12], [83, 17], [83, 14], [79, 20], [76, 23], [76, 19], [75, 18], [72, 13, 13], [71], [70, 30], [69], [67], [66], [63, 37], [62, 37], [62], [61, 39], [61], [51, 44], [50, 43], [44, 40, 15], [43]]


def test_bestFitDecreasing_binppHardOFF():
    reader: DatasetReader = BinppReader(dataset_hard)

    strategy: Offline = offline.BestFitDecreasing()
    result = strategy(reader.offline())

    assert len(result) == 60
    assert result == [[34978, 34849, 30125], [34703, 34598, 30683], [34608, 34356, 30943], [34524, 34069, 31346], [34308, 33895, 31782], [34049, 33806, 31967], [33842, 33716, 32398], [33738, 33546, 32696], [33590, 33468, 32897], [33507, 33383, 33075], [33465, 32976, 32762], [33190, 32553, 32230], [32638, 31954, 31903], [32176, 31686, 31597], [31724, 31532, 31499], [31561, 30869, 30766], [30915, 30644, 30559], [30678, 30315, 30238], [30448, 29947, 29890], [29974, 29858, 29856], [29886, 29697, 29438], [29783, 29301, 29174], [29427, 29123, 29117], [29173, 29095, 29094], [29116, 29041, 29038], [29063, 28946, 28921], [28977, 28842, 28703], [28910, 28350, 28305], [28360, 28225, 28160], [28302, 28040, 28020], [28094, 27775, 27765], [27901, 27439, 27425], [27688, 27365, 27349], [27394, 27180, 26935], [27284, 26867, 26795], [26881, 26651, 26550], [26703, 26375, 26368, 20496], [26432, 26204, 26192, 21127], [26244, 26158, 26133, 21315], [26181, 25945, 25906, 21950], [26067, 25698, 25688, 22442], [25759, 25615, 25530, 23090], [25652, 25366, 25324, 23621], [25528, 25142, 24852, 24463], [25273, 24658, 24592, 24564], [24846, 24374, 24359, 24332], [24457, 23956, 23952, 23932], [23987, 23837, 23795, 23774], [23895, 23502, 23453, 23430], [23663, 23178, 22991, 22942], [23366, 22432, 22415, 22338], [22743, 22081, 22014, 21948], [22134, 21784, 21727, 21722], [21796, 21498, 21480, 21193], [21557, 20997, 20837, 20813], [21060, 20693, 20686, 20677], [20693, 20664, 20663, 20634], [20676, 20570, 20566, 20441], [20616, 20226, 20114], [20307]]


def test_bestFitDecreasing_jburkOFF():

    reader: DatasetReader = JburkardtReader(dataset_c,dataset_w)

    strategy: Offline = offline.BestFitDecreasing()
    result = strategy(reader.offline())

    assert len(result) == 8
    assert result == [[70], [60, 33, 7], [60, 33], [50, 50], [50, 33, 11, 3], [33, 33, 33], [33, 33], [33]]
 